parallel::detectCores()
Sys.getenv("PATH")
system('g++ -v')
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.getenv("PATH")
system('g++ -v')
system('g++')
system('ls')
Sys.getenv("PATH")
system("g++ -v")
Sys.getenv("PATH")
system(g++)
system('g++ --v'
system('g++ --v')
system('g++ -v')
library(rstan)
install.packages("rstan")
library(rstan)
load("C:/Users/reunink/Downloads/robust_all_15.RData")
View(mod)
mod
summary(mod)
get_stanmodel(mod)
View(summary(mod.rob)$summary)
get_stanmodel(mod.rob)
seq.Date("01/20/2017", "04/27/2017", "day")
as.Date("01/20/2017")
as.Date("20-0102017")
as.Date("20-01-017")
as.Date("20-01-2017")
as.Date("2007-20-01")
as.Date("2007-01-20")
seq.Date(as.Date("2017-01-20"), as.Date("2017-04-29"), "day")
sample(seq.Date(as.Date("2017-01-20"), as.Date("2017-04-29"), "day"), 20)
set.seed(711)
sample(seq.Date(as.Date("2017-01-20"), as.Date("2017-04-29"), "day"), 20)
set.seed(711)
sample(seq.Date(as.Date("2017-01-20"), as.Date("2017-04-29"), "day"), 20)
set.seed(711)
sample(seq.Date(as.Date("2017-01-20"), as.Date("2017-04-29"), "day"), 20)
set.seed(711)
sample(seq.Date(as.Date("2017-01-20"), as.Date("2017-04-29"), "day"), 20)
set.seed(711)
sample(seq.Date(as.Date("2017-01-20"), as.Date("2017-04-29"), "day"), 20)
set.seed(711)
sample(seq.Date(as.Date("2017-01-20"), as.Date("2017-04-29"), "day"), 20)
set.seed(711)
sample(seq.Date(as.Date("2017-01-20"), as.Date("2017-04-29"), "day"), 20)
set.seed(711)
sample(seq.Date(as.Date("2017-01-20"), as.Date("2017-04-29"), "day"), 20)
set.seed(1)
sample(seq.Date(as.Date("2017-01-20"), as.Date("2017-04-29"), "day"), 20)
names(df)
setwd("C:/Users/reunink/Box Sync")
library(data.table)
df <- fread("C:/users/reunink/dropbox/Projects/ira_tweets_csv_hashed/ira_tweets_csv_hashed.csv")
df$userid[1:20]
df$tweet_time[1:10]
as.Date(df$tweet_time[1:10])
df[,date:=as.Date(tweet_time))
df[,date:=as.Date(tweet_time)]
tmp <- df[,sum(retweet_count), by=date]
tmp
plot(tmp$date, tmp$V1)
tmp <- df[,sum(retweet_count), by=.(date, tweet_language)]
tmp
tmp.eng <- tmp[tweet_language=="en", ]
tmp.eng
tmp.eng <- tmp[date > as.Date("2014-01-01")]
plot(tmp.eng)
plot(tmp.eng$date, tmp.eng$V1)
plot(tmp.eng$date, tmp.eng$V1, log="y")
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets (log scale)",
xlab="Date")
plot(tmp.eng$date, tmp.eng$V1, ylab="Number of Retweets (log scale)",
xlab="Date")
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets (log scale)",
xlab="Date")
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date")
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scale::alpha("gray" ,.8))
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha("gray" ,.8))
tmp$date
tmp$tweet_language
lang <- unique(tmp$tweet_language)
lang
max(lang)
length(lang)
lang.col <- c("#b9328e","#6fc648","#ad5ddd","#499e2f","#8f3fa7","#46c76a",
"#dd62be","#a9bf35","#4e61d0","#c4ad2e","#9573db","#7b952d",
"#d780e0","#3ea463","#de367d","#4bd29d","#c6331e","#41bebc",
"#ef5f42","#54b9e5","#d5621c","#6988e1","#e89329","#4b91ce",
"#e2b04c","#5363a4","#bd822a","#ac9be0","#427d30","#e86ba1",
"#88ba6e","#8a5498","#b1b65c","#ae4976","#69b78e","#de464e",
"#317d58","#e0536c","#696d2e","#d089bb","#93832c","#b42d4b",
"#c8ac71","#8d4768","#dd7949","#e5808f","#986932","#e19190",
"#b1412c","#e4966d","#a75355","#9a512a")
names(lang.col) <- lang
lang.col
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.8))
tmp[, .N, by=tweet_language]
langs <- tmp[, .N, by=tweet_language]
sort(langs)
langs
langs[sort(N),]
langs[order(N),]
langs.other <- langs[N < 800, ]
langs.other
df[tweet_language %in% lang.others$tweet_language, tweet_language:="Other"]
df[tweet_language %in% langs.other$tweet_language, tweet_language:="Other"]
tmp <- df[,sum(retweet_count), by=.(date, tweet_language)]
tmp.eng <- tmp[date > as.Date("2014-01-01")]
lang <- unique(tmp$tweet_language)
lang
RColorBrewer::brewer.pal.info
lang.col <- RColorBrewer::brewer.pal("Set3", 10)
lang.col <- RColorBrewer::brewer.pal(10, "Set3")
names(lang.col) <- lang
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.8))
tmp <- df[,sum(retweet_count), by=.(date, tweet_language)]
tmp.eng <- tmp[date > as.Date("2014-01-01")]
lang <- unique(tmp$tweet_language)
lang.col <- RColorBrewer::brewer.pal(10, "Set3")
names(lang.col) <- lang
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.8))
tmp
tmp$tweet_language
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.5))
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9))
legend("top", col=lang.col)
legend("top", col=lang.col, legend=lang)
legend("top", col=lang.col, legend=lang, pch-1)
?legend
lang.col
legend("top", col=lang.col, legend=lang, pch-1)
legend("top",  legend=lang, pch-1)
legend("top",  legend=lang, pch=1, col=lang.col)
legend("top",  legend=lang, pch=1, col=lang.col, lwd=2, ncol = 5)
legend("topleft",  legend=lang, pch=1, col=lang.col, lwd=2, ncol = 5)
legend("topleft",  legend=lang, pch=1, col=lang.col, cex=2, ncol = 5)
legend("topleft",  legend=lang, pch=1, col=lang.col, cex.pch=2, ncol = 5)
legend("topleft",  legend=lang, pch=1, col=lang.col, pt.lwd=2, ncol = 5)
df[tweet_language ==  "", tweet_language:="Unknown"]
tmp <- df[,sum(retweet_count), by=.(date, tweet_language)]
tmp.eng <- tmp[date > as.Date("2014-01-01")]
lang <- unique(tmp$tweet_language)
lang.col <- RColorBrewer::brewer.pal(10, "Set3")
names(lang.col) <- lang
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9))
legend("topleft",  legend=lang, pch=1, col=lang.col, pt.lwd=2, ncol = 5)
tmp.eng <- tmp[date > as.Date("2013-01-01")]
lang <- unique(tmp$tweet_language)
lang.col <- RColorBrewer::brewer.pal(10, "Set3")
names(lang.col) <- lang
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9))
legend("topleft",  legend=lang, pch=1, col=lang.col, pt.lwd=2, ncol = 5)
tmp <- df[,sum(retweet_count), by=.(date, tweet_language)]
tmp.eng <- tmp[date > as.Date("2013-01-01")]
lang <- unique(tmp$tweet_language)
lang.col <- RColorBrewer::brewer.pal(10, "Set3")
names(lang.col) <- lang
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9))
legend("topleft",  legend=lang, pch=1, col=lang.col, pt.lwd=2, ncol = 5)
par(mar=c(2,4,3,2))
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9))
legend("topleft",  legend=lang, pch=1, col=lang.col, pt.lwd=2, ncol = 5)
par(mar=c(4,6,3,2))
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9))
legend("topleft",  legend=lang, pch=1, col=lang.col, pt.lwd=2, ncol = 5)
par(mar=c(4,5,3,2))
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9))
legend("topleft",  legend=lang, pch=1, col=lang.col, pt.lwd=2, ncol = 5)
lang <- sort(unique(tmp$tweet_language))
lang.col <- RColorBrewer::brewer.pal(10, "Set3")
names(lang.col) <- lang
par(mar=c(4,5,3,2))
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9))
legend("topleft",  legend=lang, pch=1, col=lang.col, pt.lwd=2, ncol = 5)
RColorBrewer::brewer.pal.info
lang.col <- RColorBrewer::brewer.pal(10, "Paired")
names(lang.col) <- lang
par(mar=c(4,5,3,2))
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9))
legend("topleft",  legend=lang, pch=1, col=lang.col, pt.lwd=2, ncol = 5)
rep(1:2, 5)
lang.pch <- rep(1:2, 5)
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9),
pch=lang.pch[tmp.eng$tweet_language])
lang.pch[tmp.eng$tweet_language]
names(lang.col) <- lang
lang.pch <- rep(1:2, 5)
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9),
pch=lang.pch[tmp.eng$tweet_language])
lang.pch
names(pang.pch) <- lang
names(lang.pch) <- lang
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Date", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9),
pch=lang.pch[tmp.eng$tweet_language])
legend("topleft",  legend=lang, pch=lang.pch, col=lang.col, pt.lwd=2, ncol = 5)
lang.pch[tmp.eng$tweet_language]
plot(tmp.eng$date, tmp.eng$V1, log="y", ylab="Number of Retweets\n(log scale)",
xlab="Day", col=scales::alpha(lang.col[tmp.eng$tweet_language] ,.9),
pch=lang.pch[tmp.eng$tweet_language])
legend("topleft",  legend=lang, pch=lang.pch, col=lang.col, pt.lwd=2, ncol = 5)
rbinom(100, 2)
rbinom(100, prob=2)
?rbinom
rbinom(100, size=1 prob=2)
rbinom(100, size=1, prob=2)
rbinom(100, size=1, prob=.5)
?rnbinom
rnbinom(100, size=1, prob=.5, mu=1)
rnbinom(100, size=1,  mu=1)
rnbinom(100, size=.5,  mu=2)
?cut
table(rnbinom(1000, size=.5,  mu=2))
table(rnbinom(1000, size=.5,  mu=1))
table(rnbinom(1000, size=.25,  mu=1))
table(rnbinom(1000, size=.25,  mu=1))/1000
setwd("C:/Users/reunink/Dropbox/Projects/2018-live-poll-results/")
rm(list=ls())
load("Out.RData")
install.packages("rstanarm")
install.packages("brms")
library(brms)
library(abind)
tmp
out
out <- replicate(100, apply(predict(mod3, newdata=pred.df,
allow_new_levels=T, summary=F,
nsamples = 100), 2, function(x){
c(sum(x==1), sum(x==2), sum(x==3))
}))
mod3
mod3 <- brm(response~(1 + partyid|age_combined) + (1 + partyid|educ) +
(1+partyid|race_gender)  +
(1|partyid) + (1|stdist), data=df[df$voted==1,],
family=categorical(), chains=2, cores=2, control=list("adapt_alpha"=.99))
df$response
mod
?stan
mod3 <- brm(response~(1 + partyid|age_combined) + (1 + partyid|educ) +
(1+partyid|race_gender)  +
(1|partyid) + (1|stdist), data=df[df$voted==1,],
family=categorical(), chains=2, cores=2, control=list("adapt_delta"=.99))
mod3
rstan::stan_diag(mod3)
mod3
df$file_party
table(df$partyid, df$file_party_model)
table(df$partyid, df$file_party)
table(df$partyid, df$file_party, useNA = "any")
table(df$partyid, df$file_party, useNA = "always")
sum(is.na(df$file_party))
sum(is.na(df$file_party_region))
table(df$file_party_region)
df$file_party_region
table(df$file_party)
table(df$file_party_model)
table(df$file_party_region)
table(df$file_party, df$partyid)
mod3 <- brm(response~(1 + partyid|age_combined) + (1 + partyid|educ) +
(1+partyid|race_gender)  +
(1|partyid) + (1|stdist), data=df[df$voted==1,],
family=categorical(), chains=2, cores=2, control=list("adapt_delta"=.99, treedepth=15))
pred.df <- df[df$voted==1,c("age_combined", "educ", "race_gender",  "partyid")]
pred.df <- pred.df[complete.cases(pred.df),]
pred.df <- unique(pred.df)
pred.df$stdist <- "New"
pred.df$educ <- "New"
pred.df$age_combined <- "New"
pred.df$race_gender <- "New"
# pred.df$response <- "New"
pred.df <-unique(pred.df)
out <- replicate(100, apply(predict(mod3, newdata=pred.df,
allow_new_levels=T, summary=F,
nsamples = 100), 2, function(x){
c(sum(x==1), sum(x==2), sum(x==3))
}))
library(abind)
array(t(unlist(out)), c(3,3,100))
tmp <- apply(out, c(1,2), median)
lo <- apply(out, c(1,2), quantile, p=0.05)
lo <- c(lo)
up <- apply(out, c(1,2), quantile, p=0.95)
up <- c(up)
colnames(tmp) <- c("Republicans", "Independents", "Democrats")
png("Indep_Vote.png", height=8, width=8,
units="in", res=200)
par(family="mstreg")
barplot(tmp, beside = T, col=scales::alpha(c( "#124073","#A8BF14", "#B71D1A"), .6),
yaxt="n", xlim=c(1,15), ylim=c(0,100), border=NA)
axis(2, family="mstthin")
legend("right", legend=c("Democrat", "Undecided", "Republican"),
fill=scales::alpha(c( "#124073","#A8BF14", "#B71D1A"), .6),
title="Vote Choice", bty="n", border=NA)
title(main=toupper("Independent Early Voters are\nBreaking towards Democrats"), family="futura")
title(ylab="Percentage", xlab="")
for(ii in 1:length(up)){
lines(x=c(ii, ii)+(.5 + ((ii -1) %/% 3)), y=c(lo[ii], up[ii]),
lwd=2, col=c("#B71D1A", "#124073","#A8BF14")[((ii %% 3) + 1)])
}
dev.off()
mod4 <- brm(response~(1 + file_party|age_combined) + (1 + file_party|educ) +
(1+file_party|race_gender)  +
(1|file_party) + (1|stdist), data=df[df$voted==1,],
family=categorical(), chains=2, cores=2, control=list("adapt_delta"=.99, treedepth=15))
save.image("Out.RData")
?stan
library(brms)
mod3 <- brm(response~(1 + partyid|age_combined) + (1 + partyid|educ) +
(1+partyid|race_gender)  +
(1|partyid) + (1|stdist), data=df[df$voted==1,],
family=categorical(), chains=2, cores=2, control=list("adapt_delta"=.99, "max_treedepth"=15))
mod3 <- brm(response~(1 + partyid|age_combined) + (1 + partyid|educ) +
(1+partyid|race_gender)  +
(1|partyid) + (1|stdist), data=df[df$voted==1,],
family=categorical(), chains=2, cores=2, control=list("adapt_delta"=.99, "max_treedepth"=15))
