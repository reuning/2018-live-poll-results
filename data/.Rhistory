' )
fx( 2L, 5 ) # should be 10
pkgbuild::has_build_tools(debug=T)
pkgbuild::has_build_tools(debug=T)
pkgbuild::has_build_tools(debug=T)
install.packages("rstan", type="source")
ystem('clang++ -v')
System('clang++ -v')
system('clang++ -v')
df <- read.csv("dfp_wave2_201810_final.csv")
rm(list=ls())
library(survey)
library(gplots)
setwd("/Users/kevinreuning/Dropbox/Projects/DFP_Sec/")
setwd("C:/users/reunink/Dropbox/Projects/DFP_Sec/")
df <- read.csv("dfp_wave2_201810_final.csv")
names(df)
data("Train", package = "mlogit")
install.packages("mlogit")
library(mlogit)
data("Train", package = "mlogit")
Tr <- mlogit.data(Train, shape = "wide", varying = 4:11,
choice = "choice", sep = "_",
opposite = c("price", "time", "change", "comfort"),
alt.levels=c("A", "B"), id.var ="id")
Train.ml <- mlogit(choice ~ price + time + change + comfort, Tr)
Train.mxlc <- mlogit(choice ~ price + time + change + comfort, Tr,
panel = TRUE, rpar = c(time = "cn", change = "n", comfort = "ln"),
correlation = TRUE, R = 100, halton = NA)
Train.mxlu <- update(Train.mxlc, correlation = FALSE)
Train.mxlu
summary(Train.mxlu)
summary(Train.ml)
?mlogit
mlogit.data()
data(Electricity)
Electricity
Tr <- mlogit.data(Electricity, shape = "wide", varying = 4:11,
choice = "choice", sep = "_",
opposite = c("loci", "wki", "todi", "seasi"),
alt.levels=c("A", "B"), id.var ="id")
Train
Tr <- mlogit.data(Electricity, shape = "wide", varying = 4:11,
choice = "choice", sep = "_",
opposite = c("loc", "wk", "tod", "seas", "pf"),
alt.levels=c("A", "B"), id.var ="id")
Tr <- mlogit.data(Electricity, shape = "wide", varying = 4:11,
choice = "choice", sep = "",
opposite = c("loc", "wk", "tod", "seas", "pf"),
alt.levels=c("A", "B"), id.var ="id")
ncol(Electricity)
Tr <- mlogit.data(Electricity, shape = "wide", varying = 2:26z,
choice = "choice", sep = "",
opposite = c("loc", "wk", "tod", "seas", "pf"),
alt.levels=c("A", "B"), id.var ="id")
Tr <- mlogit.data(Electricity, shape = "wide", varying = 2:26,
choice = "choice", sep = "",
opposite = c("loc", "wk", "tod", "seas", "pf"),
alt.levels=c("A", "B"), id.var ="id")
Tr <- mlogit.data(Electricity, shape = "wide", varying = 3:26,
choice = "choice", sep = "",
opposite = c("loc", "wk", "tod", "seas", "pf"),
alt.levels=c("A", "B"), id.var ="id")
Tr <- mlogit.data(Electricity, shape = "wide", varying = 3:26,
choice = "choice", sep = "",
opposite = c("loc", "wk", "tod", "seas", "pf"),
alt.levels=c("1", "2", "3", "4"), id.var ="id")
Tr
Train.ml <- mlogit(choice ~ price + time + change + comfort, Tr)
Train.ml <- mlogit(choice ~ loc + wk + tod + seas + pf, Tr)
Train.ml
summary(train.ml)
data("Fishing", package = "mlogit")
fishing
Fishing
names(Fishing)
Tr <- mlogit.data(Fishing, shape = "wide", varying = 2:9,
choice = "choice", sep = ".",
opposite = c("price", "catch"),
alt.levels=c("charter", "pier", "boat", "beach"))
Tr <- mlogit.data(Fishing, shape = "wide", varying = 2:9,
choice = "mode", sep = ".",
opposite = c("price", "catch"),
alt.levels=c("charter", "pier", "boat", "beach"))
Tr
Train.ml <- mlogit(choice ~ income + price, Tr)
Train.ml <- mlogit(mode ~ income + price, Tr)
Train.ml <- mlogit(mode ~ income + price + catch, Tr)
Tr <- mlogit.data(Fishing, shape = "wide", varying = 2:9,
choice = "mode", sep = ".",
opposite = c("price", "catch"),
alt.levels=c("charter", "pier", "boat", "beach"), id="income")
Tr
Train.ml <- mlogit(mode ~ income + price + catch, Tr)
names(fishing)
names(Fishing)
example()
data(Examples)
data("Game", package = "mlogit")
Game
names(Game)
data("HC", package = "mlogit")
HC
names(HC)
Tr <- mlogit.data(Fishing, shape = "wide", varying = c(2:8,10:16),
choice = "depvar", sep = ".",
opposite = c("ich", "och"),
alt.levels=c("gcc", "ecc","erc", "hpc", "gc", "ec", "er"))
Tr <- mlogit.data(Fishing, shape = "wide", varying = c(2:8,10:16),
choice = "depvar", sep = ".",
opposite = c("ich", "och"),
alt.levels=c("gcc", "ecc","erc", "hpc", "gc", "ec", "er"))
data("NOx", package = "mlogit")
Tr <- mlogit.data(HC, shape = "wide", varying = c(2:8,10:16),
choice = "depvar", sep = ".",
opposite = c("ich", "och"),
alt.levels=c("gcc", "ecc","erc", "hpc", "gc", "ec", "er"))
Tr
names(Tr)
Train.ml <- mlogit(deepvar ~ icca + occa + income, Tr)
Train.ml <- mlogit(choice ~ icca + occa + income, Tr)
Train.ml <- mlogit(deepvar ~ icca + occa + income, Tr)
head(TR)
Train.ml <- mlogit(depvar ~ icca + occa + income, Tr)
Train.ml <- mlogit(depvar ~ icca + occa + income + ich + och, Tr)
?mlogit.data
Train.ml <- mlogit(depvar ~  ich + och, Tr)
Train.ml
summary(Train.ml)
?mlogit
data("Fishing", package = "mlogit")
Fish <- mlogit.data(Fishing, varying = c(2:9), shape = "wide", choice = "mode")
summary(mlogit(mode ~ price + catch, data = Fish))
summary(mlogit(mode ~ 0 | income, data = Fish))
names(tr)
names(Tr)
Train.ml <- mlogit(depvar ~  ich + och |income , Tr)
Train.ml
summary(Train.ml)
Train.mxlc <- mlogit(depvar ~  ich + och |income, Tr,
panel = TRUE, rpar = c(time = "cn", change = "n", comfort = "ln"),
correlation = TRUE, R = 100, halton = NA)
Train.mxlc <- mlogit(depvar ~  ich + och |income, Tr,
panel = F, rpar = c(time = "cn", change = "n", comfort = "ln"),
correlation = TRUE, R = 100, halton = NA)
Train.mxlc <- mlogit(depvar ~  ich + och |income, Tr,
panel = F, rpar = c(ich = "cn", och = "n", income = "ln"),
correlation = TRUE, R = 100, halton = NA)
Train.mxlc <- mlogit(depvar ~  ich + och |income, Tr,
panel = F, rpar = c(ich = "cn", och = "n"),
correlation = TRUE, R = 100, halton = NA)
Train.mxlc <- mlogit(depvar ~  ich + och , Tr,
panel = F, rpar = c(ich = "cn", och = "n"),
correlation = TRUE, R = 100, halton = NA)
?mlogit
Train.mxlc <- mlogit(depvar ~  ich + och , Tr,
panel = F, rpar = c(ich = "n", och = "n"),
correlation = TRUE, R = 100, halton = NA)
Train.mxlc
summary(Train.mxlc)
rpar(Train.mxlc)
Train.mxlc <- mlogit(depvar ~  ich + och | income , Tr,
panel = F, rpar = c(ich = "n", och = "n"),
correlation = TRUE, R = 100, halton = NA)
Train.mxlc <- mlogit(depvar ~  ich  | income , Tr,
panel = F, rpar = c(ich = "n", och = "n"),
correlation = TRUE, R = 100, halton = NA)
Train.mxlc <- mlogit(depvar ~  ich  | income , Tr,
panel = F, rpar = c(ich = "n"),
correlation = TRUE, R = 100, halton = NA)
Train.mxlc <- mlogit(depvar ~  ich  | income , Tr,
panel = F, rpar = c(ich = "n"),
correlation = F, R = 100, halton = NA)
Train.mxlc <- mlogit(depvar ~  ich  | income , Tr,
panel = F, rpar = c(ich = "n", income="n"),
correlation = F, R = 100, halton = NA)
Train.mxlc <- mlogit(depvar ~  ich + och | income , Tr,
panel = F, rpar = c(ich = "n", income = "n"),
correlation = TRUE, R = 100, halton = NA)
setwd("/Users/kevinreuning/Dropbox/Projects/2018-live-poll-results/")
rm(list=ls())
files <- dir("data/")
setwd("data/")
df <- NULL
ii <- 1
tmp <- read.csv(files[ii])
tmp
names(tmp)
files[ii]
strsplit(files[ii], "-")
strsplit(files[ii], "-|\\.")
stdist <- strsplit(files[ii], "-|\\.")[[1]][3]
substr(1,2, stdist)
stdist
tmp$st <- substr(stdist, 1,2)
substr(stdist, 1,2)
substr(stdist, 3,4)
rm(list=ls())
files <- dir("data/")
setwd("data/")
df <- NULL
for(ii in 1:length(files)){
tmp <- read.csv(files[ii])
tmp$surv_num <- as.numeric(strsplit(files[ii], "-|\\.")[[1]][4])
stdist <- strsplit(files[ii], "-|\\.")[[1]][3]
tmp$stdist <- stdist
tmp$st <- substr(stdist, 1,2)
tmp$dist <- substr(stdist, 3, 4)
df <- rbind(df, tmp)
}
setwd("/Users/kevinreuning/Dropbox/Projects/2018-live-poll-results/")
rm(list=ls())
files <- dir("data/")
setwd("data/")
df <- NULL
for(ii in 1:length(files)){
tmp <- read.csv(files[ii])
tmp$surv_num <- as.numeric(strsplit(files[ii], "-|\\.")[[1]][4])
stdist <- strsplit(files[ii], "-|\\.")[[1]][3]
tmp$stdist <- stdist
tmp$st <- substr(stdist, 1,2)
tmp$dist <- substr(stdist, 3, 4)
df <- rbind(df, tmp)
}
ii
names(df)
names(tmp)
pylr::
setwd("/Users/kevinreuning/Dropbox/Projects/2018-live-poll-results/")
rm(list=ls())
files <- dir("data/")
setwd("data/")
df <- NULL
for(ii in 1:length(files)){
tmp <- read.csv(files[ii])
tmp$surv_num <- as.numeric(strsplit(files[ii], "-|\\.")[[1]][4])
stdist <- strsplit(files[ii], "-|\\.")[[1]][3]
tmp$stdist <- stdist
tmp$st <- substr(stdist, 1,2)
tmp$dist <- substr(stdist, 3, 4)
df <- plyr::rbind.fill(df, tmp)
}
dim(df)
table(df$likely)
prop.table(table(df$likely))
prop.table(table(df$likely, df$race_edu))
prop.table(table(df$likely, df$race))
prop.table(table(df$likely, df$race_eth))
prop.table(table(df$likely, df$race_eth), marin=1)
prop.table(table(df$likely, df$race_eth), margin=2)
library(survey)
?svydesign
df$OPIOID
df$turnout_class
df$final_weight
svydesign(~1, weights=~final_weight, data=df)
svy.df <- svydesign(~1, weights=~final_weight, data=df)
names(df)
df$likely
df$file_race
df$race_eth
svymean(~race_eth, data=df)
svymean(~race_eth, design=svy.df)
svymean(~race_eth+likely, design=svy.df)
df$voted <- df$likely=="Already Voted"
df$voted
table(df$voted )
table(df$likely)
df$voted <- df$likely=="Already voted"
df$voted
names(df)
lme4::lmer(voted~ager + educ + gender + (1|stdist), data=df, weights = final_weight)
mod <- lme4::lmer(voted~ager + educ + gender + (1|stdist), data=df, weights = final_weight)
summary(mod)
ranef(summer(mod))
ranef(mod)
library(lme4)
mod <- glmer(voted~ager + educ + gender + (1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"))
summary(mod)
ranef(mod)
plot(ranef(mod))
by(df$voted, df$stdist, sum)
tmp <- by(df$voted, df$stdist, sum)
which(tmp > 5)
names(tmp)[which(tmp > 5)]
df[df$stdist %in% names(tmp)[which(tmp > 5)], ]
df <- df[df$stdist %in% names(tmp)[which(tmp > 5)], ]
mod <- glmer(voted~ager + educ + gender + (1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"))
summary(mod)
df$gender[df$gender=="[DO NOT READ] Don't know/Refused"] <- NA
df$ager[df$ager=="[DO NOT READ] Don't know/Refused"] <- NA
mod <- glmer(voted~ager + educ + gender + (1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"))
summary(mod)
ranef(mod)
plot(ranef(mod))
mod <- glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
df$voted
summary(mod)
plot(ranef(mod))
?ranef.merMod
plot(ranef(mod, condVar = T))
?ranef.merMod
dotplot(ranef(mod, condVar = T))
dotplot.ranef.mer(ranef(mod, condVar = T))
df$gender_combined
table(df$gender_combined)
table(df$gender)
table(df$response)
table(df$approve)
table(df$APPKAV)
table(df$hdem_fav)
table(df$genballot)
df$gender[df$gender=="[DO NOT READ] Don't know/Refused"] <- NA
df$ager[df$ager=="[DO NOT READ] Don't know/Refused"] <- NA
df$educ[df$educ=="[DO NOT READ] Refused"] <- NA
df$genballot[df$genballot=="[DO NOT READ] Don't know/Refused"] <- NA
mod <- glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|genballot) (1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
mod <- glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|genballot) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
summary(mod)
dotplot.ranef.mer(ranef(mod, condVar = T))
df$response
table(df$response)
df$response[df$response %in% c("3", "4", "5", "6")] <- NA
mod <- glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|response) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
summary(mod)
dotplot.ranef.mer(ranef(mod, condVar = T))
df$ager[df$ager=="[DO NOT READ] Refused"] <- NA
mod <- glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|response) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
summary(mod)
dotplot.ranef.mer(ranef(mod, condVar = T))
mod <- glmer(voted~(1|ager) + (1|educ) + (1|gender)  +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
dotplot.ranef.mer(ranef(mod, condVar = T))
table(df$gender)
setwd("/Users/kevinreuning/Dropbox/Projects/2018-live-poll-results/")
rm(list=ls())
files <- dir("data/")
setwd("data/")
df <- NULL
for(ii in 1:length(files)){
tmp <- read.csv(files[ii], stringsAsFactors = F)
tmp$surv_num <- as.numeric(strsplit(files[ii], "-|\\.")[[1]][4])
stdist <- strsplit(files[ii], "-|\\.")[[1]][3]
tmp$stdist <- stdist
tmp$st <- substr(stdist, 1,2)
tmp$dist <- substr(stdist, 3, 4)
df <- plyr::rbind.fill(df, tmp)
}
library(survey)
svy.df <- svydesign(~1, weights=~final_weight, data=df)
df$voted <- df$likely=="Already voted"
tmp <- by(df$voted, df$stdist, sum)
df <- df[df$stdist %in% names(tmp)[which(tmp > 5)], ]
df$gender[df$gender=="[DO NOT READ] Don't know/Refused"] <- NA
df$ager[df$ager=="[DO NOT READ] Don't know/Refused"] <- NA
df$ager[df$ager=="[DO NOT READ] Refused"] <- NA
df$educ[df$educ=="[DO NOT READ] Refused"] <- NA
df$genballot[df$genballot=="[DO NOT READ] Don't know/Refused"] <- NA
df$response[df$response %in% c("3", "4", "5", "6")] <- NA
library(lme4)
mod <- glmer(voted~(1|ager) + (1|educ) + (1|gender)  +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
summary(mod)
dotplot.ranef.mer(ranef(mod, condVar = T))
mod <- glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|response) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
mod <- glmer(voted~ager  + educ + gender + response +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
summary(mod)
dotplot.ranef.mer(ranef(mod, condVar = T))
library(lme4)
mod <- glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|response) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
summary(mod)
dotplot.ranef.mer(ranef(mod, condVar = T))
df$voted <- df$voted*1
df$voted
table(df$likely)
df$voted[df$likely=="[DO NOT READ] Don't know/Refused"] <- NA
mod <- glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|response) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
df$voted
table(df$voted)
dotplot.ranef.mer(ranef(mod, condVar = T))
mod <- glmer(voted~ager  + educ + gender + response +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
summary(mod)
mod@frame
svy.df <- svydesign(~1, weights=~final_weight, data=df)
mod <- svyglm(voted~(1|ager) + (1|educ) + (1|gender) + (1|response) +(1|stdist), design=df,
family=binomial(link="logit"), verbose = T)
mod <- svyglm(voted~(1|ager) + (1|educ) + (1|gender) + (1|response) +(1|stdist), design=svy.df,
family=binomial(link="logit"), verbose = T)
?svyglm
mod <- glmer(voted~ager  + educ + gender + response +(1|stdist), data=df, weights = final_weight,
family=quasibinomial(link="logit"), verbose = T)
?glmer
mod <- glmer(voted~ager  + educ + gender + response +(1|stdist), data=df, weights = final_weight,
family="binomial", verbose = T)
mod <- glmer(voted~ager  + educ + gender + response +(1|stdist), data=df, weights = final_weight,
family="quasibinomial", verbose = T)
install.packages()
install.packages("nlme")
library(nlme)
nlme::nlme()
?nlme
mod <- glmer(voted~ager  + educ + gender + response +(1|stdist), data=df,
family="binomial", verbose = T)
summary(mod)
mod <- glmer(voted~ager  + educ + gender + response +(1|stdist), data=df, weights=final_weight
family="binomial", verbose = F)
mod <- glmer(voted~ager  + educ + gender + response +(1|stdist), data=df, weights=final_weight,
family="binomial", verbose = F)
summary(mod)
install.packages("rstanarm")
library(rstanarm)
?stan_glmer()
mod <- stan_glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|response) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"))
mod <- stan_glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|response) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), cores=2, chains=2)
mod
summary(mod)
confint(mod)
ranef(mod)
plot(ranef(mod))
plot(ranef(mod))
?ranef.stanreg
plot(mod)
plot(mod, ranef())
plot(mod, rgeex_pars="intercept")
launch_shinystan(mod)
launch_shinystan(mod, ppd=F)
ranef(mod)
dotplot(ranef(mod))
plot(ranef(mod))
ranef(mod)
class(ranef(mod))
dotplot.ranef.mer(ranef(mod, condVar = T))
plot(mod)
plot(mod, regex_pars = "b")
pars(mod)
?parse
?mod
mod$coefficients
coef <- mod$coefficients
coef
names(coef)
coef <- names(mod$coefficients)
plot(mod, pars=coef[34:47])
mod <- stan_glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|race_eth) +
(1|response) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), cores=2, chains=2)
coef <- names(mod$coefficients)
coef
plot(mod, pars=coef[34:53])
dotplot.ranef.mer(ranef(mod))
setwd("/Users/kevinreuning/Dropbox/Projects/2018-live-poll-results/")
rm(list=ls())
files <- dir("data/")
setwd("data/")
df <- NULL
for(ii in 1:length(files)){
tmp <- read.csv(files[ii], stringsAsFactors = F)
tmp$surv_num <- as.numeric(strsplit(files[ii], "-|\\.")[[1]][4])
stdist <- strsplit(files[ii], "-|\\.")[[1]][3]
tmp$stdist <- stdist
tmp$st <- substr(stdist, 1,2)
tmp$dist <- substr(stdist, 3, 4)
df <- plyr::rbind.fill(df, tmp)
}
library(survey)
svy.df <- svydesign(~1, weights=~final_weight, data=df)
df$voted <- df$likely=="Already voted"
df$voted[df$likely=="[DO NOT READ] Don't know/Refused"] <- NA
tmp <- by(df$voted, df$stdist, sum)
df <- df[df$stdist %in% names(tmp)[which(tmp > 5)], ]
df$gender[df$gender=="[DO NOT READ] Don't know/Refused"] <- NA
df$ager[df$ager=="[DO NOT READ] Don't know/Refused"] <- NA
df$ager[df$ager=="[DO NOT READ] Refused"] <- NA
df$race_eth[df$race_eth=="[DO_NOT_READ]_Don't_know/Refused"] <- NA
df$educ[df$educ=="[DO NOT READ] Refused"] <- NA
df$genballot[df$genballot=="[DO NOT READ] Don't know/Refused"] <- NA
df$response[df$response %in% c("3", "4", "5", "6")] <- NA
df$voted <- df$voted*1
library(lme4)
mod <- glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|response) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), verbose = T)
summary(mod)
pdf("Already_Voted.pdf")
dotplot.ranef.mer(ranef(mod, condVar = T))
dev.off()
mod <- glmer(voted~ager  + educ + gender + response +(1|stdist), data=df, weights=final_weight,
family="binomial", verbose = F)
summary(mod)
library(rstanarm)
mod <- stan_glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|race_eth) +
(1|response) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), cores=2, chains=2)
coef <- names(mod$coefficients)
plot(mod, pars=coef[34:53])
mod <- stan_glmer(voted~(1|ager) + (1|educ) + (1|gender) + (1|race_eth) +
(1|response) +(1|stdist), data=df, weights = final_weight,
family=binomial(link="logit"), cores=2, chains=2)
